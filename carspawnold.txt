		//auto hash = GAMEPLAY::GET_HASH_KEY(features::carToSpawn.c_str());
		

			//auto pos = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), true);
			//*(unsigned short*)g_pointers->m_model_spawn_bypass = 0x9090;
			//auto veh = VEHICLE::CREATE_VEHICLE(hash, pos.x, pos.y, pos.z, 0.f, TRUE, FALSE, FALSE);
			//*(unsigned short*)g_pointers->m_model_spawn_bypass = 0x0574;

			

			//if (*g_pointers->m_is_session_started)
			//{
			//	ENTITY::_SET_ENTITY_SOMETHING(vehicle, TRUE); //True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
			//	auto networkId = NETWORK::VEH_TO_NET(vehicle);
			//	if (NETWORK::NETWORK_GET_ENTITY_IS_NETWORKED(vehicle))
			//		NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(networkId, true);
			//}

			//DECORATOR::DECOR_SET_INT(vehicle, "MPBitset", 0);
			//VEHICLE::SET_VEHICLE_IS_STOLEN(vehicle, FALSE);
			//VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//VEHICLE::SET_VEHICLE_ENGINE_ON(vehicle, 1, 1, 0);
			//NETWORK::NETWORK_FADE_IN_ENTITY(veh, TRUE);

			//if (g_config.Vfeatures_randomizecol)
			//{
			//	VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::_SET_VEHICLE_NEON_LIGHTS_COLOUR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_EXTRA_COLOURS(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_MOD_COLOR_1(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), 0);
			//	VEHICLE::SET_VEHICLE_MOD_COLOR_2(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(veh, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 255));
			//}
			//else
			//{
			//	float a, b, c;
			//	a = g_config.Vfeatures_vcol[0] * 255, b = g_config.Vfeatures_vcol[1] * 255, c = g_config.Vfeatures_vcol[2] * 255;
			//	VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(veh, a, b, c);
			//	VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(veh, a, b, c);
			//	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(veh, a, b, c);
			//	VEHICLE::_SET_VEHICLE_NEON_LIGHTS_COLOUR(veh, a, b, c);
			//	VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(veh, a, b, c);
			//	VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(veh, a, b, c);
			//	VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(veh, a, b, c);
			//}

			//if (g_config.Vfeatures_spawninveh)
			//{
			//	for (int i = -1; i < VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(veh); i++)
			//	{
			//		if (VEHICLE::IS_VEHICLE_SEAT_FREE(veh, i))
			//		{
			//			RequestControlOfEnt(veh);
			//			PED::SET_PED_INTO_VEHICLE(PLAYER::PLAYER_PED_ID(), veh, i);
			//			break;
			//		}
			//	}
			//}

			//if (g_config.Vfeatures_spawngodmode)
			//{
			//	ENTITY::SET_ENTITY_INVINCIBLE(veh, TRUE);
			//	ENTITY::SET_ENTITY_CAN_BE_DAMAGED(veh, FALSE);
			//	ENTITY::SET_ENTITY_PROOFS(veh, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE);
			//	VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_WHEELS_CAN_BREAK(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_ENGINE_HEALTH(veh, 1000.0f);
			//	VEHICLE::SET_VEHICLE_UNDRIVEABLE(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_CAN_BE_TARGETTED(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(veh, FALSE);
			//	VEHICLE::SET_VEHICLE_WHEELS_CAN_BREAK(veh, FALSE);
			//	if (VEHICLE::IS_THIS_MODEL_A_PLANE(hash))
			//		VEHICLE::SET_PLANE_TURBULENCE_MULTIPLIER(veh, 0.0f);
			//}

			//if (g_config.Vfeatures_spawnupgraded)
			//{
			//	VEHICLE::SET_VEHICLE_MOD_KIT(veh, 0);

			//	for (int i = 0; i < 48; i++) //49, 50 = livery
			//	{
			//		VEHICLE::TOGGLE_VEHICLE_MOD(veh, i, TRUE);
			//		VEHICLE::SET_VEHICLE_MOD(veh, i, VEHICLE::GET_NUM_VEHICLE_MODS(veh, i) - 1, FALSE);
			//	}

			//	for (int i = 0; i < 8; i++)
			//		VEHICLE::_SET_VEHICLE_NEON_LIGHT_ENABLED(veh, i, 1);
			//}

			//RequestControlOfEnt(veh);